{
/*
Check in explorer: https://testnetexplorer.obyte.org/#ChzGWLqR9N4p8qbC4F0kqI+rzO+GQhzK7c4/Xo2d6fs=
Agent address: 4YYPTFPPI7NDSOIYIUPK44JTDZA2MIRA
Check in explorer: https://testnetexplorer.obyte.org/#PY4MSzf0eL+Uk4Zj4LCLJS23ZkYWNhGwUmb6L3FD4g8=
Agent address: NQADFU453XS5YGPPK7FL6FBAGVSWCWUO
Check in explorer: https://testnetexplorer.obyte.org/#wPCXWfe6gWFUd+F/qcRN6jYHeelKtvDpR8ursnYpRWo=
Agent address: O3FOFQPXUBVDDTBGBEC5ZPFZOBKGEYFR
*/
	bounce_fees: { base: 10000,  },
	"init": "{
		// forever constantes
			$AA_NAME = ""; 
			$AA_OWNER = ""; // could withdraw the dust is calculable.
			$INSTRUCTIONS = "use ...";
			$HOLAA = "RFVQ6TLRWEWLVRBLBNQTKEKQ6VQ5ICQO";
		// input data
			$i = trigger.data;

		$list = "listname";
		// AA initialization code here 
		if (!!$i.debug) { bounce ("variables you want to watch when you set 'debug' in preview mode of the wallet");}
	}",
	"messages": { 
		"cases": [
			{ "if": "{ !!$list }", // Use case
			"init": "{ // use case initialization code here }",
			"messages": [ // APPs uses in this Use Case
				{ "app": "data", "payload": { list: "{$list}", add: "{timestamp}", } },
				{ "app": "payment", "payload": { "outputs": [{ "address": "{$HOLAA}", "amount": "{1}" }] } },
				{ "app": "state", "state": "{ response['message'] = var[$HOLAA][$list||"_1"];}" }
			]
			},
			{ // Default case: bounce instructions
			"messages": [ { "app": "state", "state": "{ bounce ($INSTRUCTIONS);}" }, ]
			}
		]
	}
}


{ 
/*
# HOLAA
Holder of Lists AA

## use cases / inpuit fields associations
* Create a list: 'create' = <list name>;
* Add element to existing list: 'list_name' = <existing list name>, 'add' = <element>;
* Remove last added element: 'remove_last' = <existing list name>;
* Delete existing list: 'delete' = <existing list name>;
* Find the position of an element in an existing list: var[<HOLAA address>][<existing list name>_<element>];
* Find the element at a given position in an existing list: var[<HOLAA address>][<existing list name>_<position>];
Check in explorer: https://testnetexplorer.obyte.org/#C78Vte0MzRh5nUB/jdkqYujc4CUZr6vwsC6aRjNPztw=
Agent address: RFVQ6TLRWEWLVRBLBNQTKEKQ6VQ5ICQO
*/
	init: "{
		$AA_NAME= "AAAA"; // Dynamic Asset Names Autonomous Agent;
		$AA_OWNER = "O7NYCFUL5XIJTYE3O4MKGMGMTN6ATQAJ"; // could withdraw the dust is calculable.
		
		$i = trigger.data;
		$l = $i.list;
		
		if (!$l) bounce ("Need 'list = <list_name>'!");

		$l_owner = var[$l||"_owner"] otherwise trigger.address;
		$l_count = var[$l||"_count"] otherwise 0;
		$l_public_mode = var[$l||"_public_mode"] otherwise $i.public;
		
	}",
	messages: {
		cases: [
			{ // add a element in list
				if: "{ $i.add }",
				init: "{
					if (!$l_public_mode)
						if (trigger.address != $l_owner) 
							bounce ("You don't own this private list");
					$e =  $i.add;
				}",
				messages: [
					{ 
						app: "state", state: "{
							var[$l||"_owner"] = $l_owner;
							var[$l||"_count"] = $l_count + 1;
							var[$l||"_public_mode"] = $l_public_mode;

							var[$l||"_"||$e] = var[$l||"_count"];
							var[$l||"_"||var[$l||"_count"]] = $e;
							
							response['message']= $e||" added ^^.";
						}"
					}
				]
			},
			{ // delete list
				if: "{ $i.delete }",
				init: "{
				$l = $i.delete;
					if (!(var[$l]))
						bounce ("'"||$i.list_name||"' did not exist at the first place!");
					if (trigger.address != var[$l])
						bounce ("Must be owner to delete the list");
					if (var[$l||"_count"] > 0)
						bounce ("List must be empty to be deleted, use 'remove_last' as much as needed");
				}",
				messages: [
					{ 
						app: "state", state: "{
					var[$l] = false;
					var[$l||"_count"] = false;
					
					response['message']= $l||" delete ^^.";
						}"
					}
				]
			},
		{ // remove last
				if: "{ $i.remove_last }",
				init: "{
				$l = $i.remove_last;
				if (!(var[$l]))
					bounce ("'"||$i.list_name||"' did not exist !");
				if (trigger.address != var[$l])
					bounce ("Must be owner to remove last entry of the list");
				if (var[$l||"_count"] == 0)
					bounce ("List is empty!");
				}",
				messages: [
					{ 
						app: "state", state: "{
					// get last entry
					$last_entry = var[$l||"_"||var[$l||"_count"]];
					// remove it
					var[$l||"_"||$last_entry] = false;
					var[$l||"_"||var[$l||"_count"]] = false;
					var[$l||"_count"] -= 1;

					response['message']= $last_entry||" removed ^^.";
						}"
					}
				]
			},
			{ // default case
				messages: [
					{ 
						app: "state", state: "{
							bounce ("default case");
						}"
					}
				]
			}
		]
	}
}
